<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	<!-- 프로그램에서 출력되는 로그의 레벨을 dsbug로 수정한다.
	log LEVEL
	- trace : 추적 레벨, 현재 확인하는 객체, 메소드등의 상세한 정보를 나타냄
	- debug : 프로그램을 디버깅하기 위한 정보 지정
	- info : 상태 변경과 같은 정보성 메시지를 나타냄.
	- warn : 처리 가능한 문제, 향후 시스템 에러의 원인이 될 수 있는 경우 -> 경고성 메시지를 나타냄
	- error : 요청을 처리하는 도중 문제가 발생하면 찍음
	- fatal : 아주 심각한 에러가 발생한 경우 찍힘.==>시스템적으로 심각한 문제가 발생한 경우 혹은 어플리케이션 작동이 불가능한 경우 
	 
	 내가 의도하는 로그 레벨 따라서 세분화된 출력 가능
	 로그 레벨 : 로그남긴 클래스명 - 찍으려는 메시지
	 -->
	 
	 
	<!-- Application Loggers -->
	<logger name="com.ssafy.ws">
		<level value="debug" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>
